{"version":3,"sources":["components/Calculator/Buttons.js","actions/isType.js","actions/operator.js","actions/hotkey.js","components/Calculator/Display.js","components/Calculator/Calculator.js","components/App.js","reducers/counter.js","reducers/typing.js","reducers/index.js","index.js"],"names":["Buttons","dispatch","useDispatch","useState","executeNum","setExecuteNum","operator","setOperator","init","setInit","initNumber","Container","onClick","e","Num","target","getAttribute","Operator","hotkey","type","payload","num","firstInput","Number","ACBtn","OperatorBtn","NumBTN","SimpleOperator","Equal","subtract","multiply","divide","Zero","Dot","styled","div","button","Display","displayNum","setDisplayNum","resultNum","useSelector","state","counter","typeNum","typing","useEffect","toString","length","Monitor","Text","Calculator","CalculatorScope","App","counterReducer","action","resultDiv","toFixed","result","typingReducer","allReducer","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.27d52ac5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useDispatch } from \"react-redux\";\nimport { percentage, AC } from \"../../actions/hotkey.js\";\nimport { isTyping, typed } from \"../../actions/isType.js\";\nimport {\n  add,\n  subtract,\n  multiply,\n  divide,\n  firstInput,\n} from \"../../actions/operator.js\";\n\nconst Buttons = () => {\n  const dispatch = useDispatch();\n  const [executeNum, setExecuteNum] = useState(\"\");\n  const [operator, setOperator] = useState(\"\");\n  const [init, setInit] = useState(false);\n  let initNumber = \"\";\n\n  const handleInfo = (e) => {\n    const Num = e.target.getAttribute(\"data-num\");\n    const Operator = e.target.getAttribute(\"data-opere\");\n    const hotkey = e.target.getAttribute(\"data-hotkey\");\n\n    if (Operator) {\n      if (init) {\n        setOperator(Operator);\n      } else {\n        setInit(true);\n        setOperator(Operator);\n      }\n    } else if (Num) {\n      if (init) {\n        setExecuteNum(executeNum + Num);\n        dispatch(isTyping(executeNum + Num));\n      } else {\n        initNumber += Num;\n        dispatch(firstInput(Number(initNumber)));\n      }\n    } else if (hotkey) {\n      switch (hotkey) {\n        case \"percentage\":\n          return dispatch(percentage());\n        case \"AC\":\n          initNumber = \"\";\n          setInit(false);\n          dispatch(typed());\n          return dispatch(AC());\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleCal = () => {\n    dispatch(typed());\n    switch (operator) {\n      case \"add\":\n        dispatch(add(Number(executeNum)));\n        return setExecuteNum(\"\");\n      case \"subtract\":\n        dispatch(subtract(Number(executeNum)));\n        return setExecuteNum(\"\");\n      case \"multiply\":\n        dispatch(multiply(Number(executeNum)));\n        return setExecuteNum(\"\");\n      case \"divide\":\n        dispatch(divide(Number(executeNum)));\n        return setExecuteNum(\"\");\n      default:\n        return false;\n    }\n  };\n\n  return (\n    <Container onClick={handleInfo}>\n      <ACBtn data-hotkey=\"AC\">AC</ACBtn>\n      <OperatorBtn data-hotkey=\"percentage\">%</OperatorBtn>\n      <OperatorBtn data-opere=\"divide\">÷</OperatorBtn>\n      <OperatorBtn data-opere=\"multiply\">×</OperatorBtn>\n      <NumBTN data-num=\"7\">7</NumBTN>\n      <NumBTN data-num=\"8\">8</NumBTN>\n      <NumBTN data-num=\"9\">9</NumBTN>\n      <SimpleOperator data-opere=\"subtract\">－</SimpleOperator>\n      <NumBTN data-num=\"4\">4</NumBTN>\n      <NumBTN data-num=\"5\">5</NumBTN>\n      <NumBTN data-num=\"6\">6</NumBTN>\n      <SimpleOperator data-opere=\"add\">+</SimpleOperator>\n      <NumBTN data-num=\"1\">1</NumBTN>\n      <NumBTN data-num=\"2\">2</NumBTN>\n      <NumBTN data-num=\"3\">3</NumBTN>\n      <Equal data-opere=\"=\" onClick={handleCal}>\n        =\n      </Equal>\n      <Zero data-num=\"0\">0</Zero>\n      <Dot data-num=\".\">.</Dot>\n    </Container>\n  );\n};\n\nexport default Buttons;\n\nconst Container = styled.div`\n  width: 270px;\n  display: grid;\n  grid-template-columns: repeat(4, 60px);\n  grid-template-rows: repeat(5, 48px);\n  gap: 10px;\n`;\n\nconst Equal = styled.button`\n  border: none;\n  height: 106px;\n  background: linear-gradient(180deg, #f3963f 0%, #f6791f 100%);\n  box-shadow: 2px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #fff;\n  font-size: 25px;\n  &:active {\n    box-shadow: inset 2px 2px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst Zero = styled.button`\n  width: 130px;\n  border: none;\n  background: linear-gradient(180deg, #f8f9f4 0%, #f1eee9 100%);\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #575652;\n  font-size: 15px;\n  font-weight: bold;\n  &:active {\n    box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst Dot = styled.button`\n  grid-column: 3;\n  border: none;\n  background: linear-gradient(180deg, #f8f9f4 0%, #f1eee9 100%);\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #575652;\n  font-size: 15px;\n  font-weight: bold;\n  &:active {\n    box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst NumBTN = styled.button`\n  border: none;\n  background: linear-gradient(180deg, #f8f9f4 0%, #f1eee9 100%);\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #575652;\n  font-size: 15px;\n  font-weight: bold;\n  &:active {\n    box-shadow: inset 1px 1px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst SimpleOperator = styled.button`\n  border: none;\n  background: linear-gradient(180deg, #999fa2 0%, #818a91 100%);\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #fff;\n  font-size: 15px;\n  font-weight: bold;\n  &:active {\n    box-shadow: inset 2px 2px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst ACBtn = styled.button`\n  border: none;\n  background: linear-gradient(180deg, #f3963f 0%, #f6791f 100%);\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #fff;\n  font-size: 12px;\n  font-weight: bold;\n  letter-spacing: 1px;\n  &:active {\n    box-shadow: inset 2px 2px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n\nconst OperatorBtn = styled.button`\n  border: none;\n  background: linear-gradient(180deg, #4c4d48 0%, #3a3a38 100%);\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n  color: #fff;\n  font-size: 15px;\n  font-weight: bold;\n  &:active {\n    box-shadow: inset 3px 3px 2px rgba(0, 0, 0, 0.25);\n  }\n`;\n","// actions\nexport const isTyping = (num) => {\n  return {\n    type: \"isTyping\",\n    payload: num,\n  };\n};\n\nexport const typed = () => {\n  return {\n    type: \"typed\",\n  };\n};\n","// actions\nexport const add = (num) => {\n  return {\n    type: \"add\",\n    payload: num,\n  };\n};\n\nexport const subtract = (num) => {\n  return {\n    type: \"subtract\",\n    payload: num,\n  };\n};\n\nexport const multiply = (num) => {\n  return {\n    type: \"multiply\",\n    payload: num,\n  };\n};\n\nexport const divide = (num) => {\n  return {\n    type: \"divide\",\n    payload: num,\n  };\n};\n\nexport const firstInput = (num) => {\n  return {\n    type: \"firstInput\",\n    payload: num,\n  };\n};\n","// actions\nexport const percentage = () => {\n  return {\n    type: \"percentage\",\n  };\n};\n\nexport const AC = () => {\n  return {\n    type: \"AC\",\n  };\n};\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components/macro\";\nimport { useSelector } from \"react-redux\";\n\nconst Display = () => {\n  const [displayNum, setDisplayNum] = useState();\n  const resultNum = useSelector((state) => state.counter);\n  const typeNum = useSelector((state) => state.typing);\n\n  useEffect(() => {\n    if (resultNum.toString().length > 13) {\n      setDisplayNum(\"Error\");\n    } else {\n      setDisplayNum(resultNum);\n    }\n  }, [resultNum]);\n\n  return (\n    <Container>\n      <Monitor>\n        <Number>{typeNum || displayNum}</Number>\n      </Monitor>\n      <Text>REDUX PRACTICE</Text>\n    </Container>\n  );\n};\n\nexport default Display;\n\nconst Container = styled.div`\n  background-color: #5e6265;\n  height: 96px;\n  width: 270px;\n  border-radius: 8px;\n  margin-bottom: 16px;\n  box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.25);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nconst Monitor = styled.div`\n  width: 250px;\n  height: 60px;\n  background: linear-gradient(180deg, #dbd2cb 0%, #c8c7b3 100%);\n  box-shadow: inset 0px 4px 4px rgba(0, 0, 0, 0.25);\n  border-radius: 6px;\n  position: relative;\n`;\n\nconst Text = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 8px;\n  font-weight: bold;\n  letter-spacing: 1px;\n  color: #b7bbbc;\n  margin-top: 8px;\n`;\n\nconst Number = styled.div`\n  font-family: \"Roboto\", sans-serif;\n  font-size: 30px;\n  position: absolute;\n  right: 10px;\n  top: 13px;\n`;\n","import React from \"react\";\nimport styled from \"styled-components/macro\";\nimport Buttons from \"./Buttons\";\nimport Display from \"./Display\";\n\nconst Calculator = () => {\n  return (\n    <CalculatorScope>\n      <Display />\n      <Buttons />\n    </CalculatorScope>\n  );\n};\n\nexport default Calculator;\n\nconst CalculatorScope = styled.div`\n  padding: 15px;\n  background: #dbdad6;\n  border-radius: 5px;\n`;\n","import React from \"react\";\nimport Calculator from \"../components/Calculator/Calculator\";\nimport styled from \"styled-components/macro\";\n\nconst App = () => {\n  return (\n    <Container>\n      <Calculator />\n    </Container>\n  );\n};\n\nexport default App;\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-top: 100px;\n`;\n","const counterReducer = (state = 0, action) => {\n  switch (action.type) {\n    case \"firstInput\":\n      return action.payload;\n    case \"add\":\n      return state + action.payload;\n    case \"subtract\":\n      return state - action.payload;\n    case \"multiply\":\n      return state * action.payload;\n    case \"divide\":\n      const resultDiv = state / action.payload;\n      return resultDiv.toFixed(4);\n    case \"percentage\":\n      const result = state / 100;\n      return result.toFixed(4);\n    case \"AC\":\n      return 0;\n    default:\n      return state;\n  }\n};\n\nexport default counterReducer;\n","const typingReducer = (state = null, action) => {\n  switch (action.type) {\n    case \"isTyping\":\n      return action.payload;\n    case \"typed\":\n      return null;\n    default:\n      return state;\n  }\n};\n\nexport default typingReducer;\n","// reducers\nimport { combineReducers } from \"redux\";\nimport counterReducer from \"./counter\";\nimport typingReducer from \"./typing\";\n\nconst allReducer = combineReducers({\n  counter: counterReducer,\n  typing: typingReducer,\n});\n\nexport default allReducer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport allReducer from \"./reducers/index\";\n\nconst store = createStore(\n  allReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}